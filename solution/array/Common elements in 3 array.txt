					Common elements in 3 array
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Given three arrays sorted in increasing order. Find the elements that are common in all three arrays.
Note: can you take care of the duplicates without using any additional Data Structure?

Example 1:

Input:
n1 = 6; A = {1, 5, 10, 20, 40, 80}
n2 = 5; B = {6, 7, 20, 80, 100}
n3 = 8; C = {3, 4, 15, 20, 30, 70, 80, 120}
Output: 20 80
Explanation: 20 and 80 are the only
common elements in A, B and C.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
link-->https://practice.geeksforgeeks.org/problems/common-elements1132/1#

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
void duplicates(int arr1[],int arr2[],int arr3[],int len1,int len2,int len3){
    int one=0,two=0,three=0,count;
    int sum=len1+len2+len3;
    for(int i=0;i<sum;i++){
        if(one>len1 || two>len2 || three>len3){
            break;
        }
        if(arr1[one]==arr2[two] && arr2[two]==arr3[three]){
            cout<<arr1[one]<<" " ;
            one++;
            two++;
            three++;
        }else if(arr1[one]<arr2[two] && arr1[one]<arr3[three]){
     
            one++;
        }else if (arr2[two]<arr1[one] && arr2[two]<arr3[three]){
        
            two++;
        }else if (arr3[three]<arr2[two] && arr3[three]<arr1[one]){
           
            three++;
        }
    }
}
int main(){

    int arr1[]={1, 5, 10, 20, 120, 80};
    int arr2[]={1, 5, 20, 80, 120};
    int arr3[]={1, 5, 15, 20, 80, 70, 80, 120};
    int great;
    int len1 =sizeof(arr1)/sizeof(arr1[0]);
    int len2 =sizeof(arr2)/sizeof(arr2[0]);
    int len3 =sizeof(arr3)/sizeof(arr3[0]);

    sort(arr1,arr1+len1);
    sort(arr2,arr2+len2);
    sort(arr3,arr3+len3);
    duplicates(arr1,arr2,arr3,len1,len2,len3);

     
   
 }  