
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++
// this is done by me(moving negative numbers to left) 
// +++++++++++++++++++++++++++++++++++++++++++++++++++++

using namespace std;
int main(){
	int arr[]={-1,2,-3,4,5,6,-7,8,9};
	int arr1[8];
	int i,len,end,start=0;
	len=sizeof(arr)/sizeof(arr[0]);
	end=len-1;
	for(i=0;i<len;i++){
		if(arr[i]<0){
			arr1[start]=arr[i];
			start++;
		}else{
			arr1[end]=arr[i];
			end--;
		}
	}
	for(i=0;i<len;i++){
		cout<<arr1[i]<<" ";
	}
	
}

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++
// this is websit code
// +++++++++++++++++++++++++++++++++++++++++++++++++++++

// A C++ program to put all negative
// numbers before positive numbers
#include <bits/stdc++.h>
using namespace std;

void rearrange(int arr[], int n)
{
	int j = 0;
	for (int i = 0; i < n; i++) {
		if (arr[i] < 0) {
			if (i != j){
				swap(arr[i], arr[j]);
			}
			j++;
		}
	}
}

// A utility function to print an array
void printArray(int arr[], int n)
{
	for (int i = 0; i < n; i++)
		printf("%d ", arr[i]);
}

// Driver code
int main()
{
	int arr[] = { -1, 2, -3, 4, 5, 6, -7, 8, 9 };
	int n = sizeof(arr) / sizeof(arr[0]);
	rearrange(arr, n);
	printArray(arr, n);
	return 0;
}




// ++++++++++++++++++++++++++++++++++++++++++++++++++++++
// this is done by me (sorting)0s1s2s
// +++++++++++++++++++++++++++++++++++++++++++++++++++++

#include<iostream>
using namespace std;
int main(){
	int arr[]= {0,2,1,2,0};
	int arr1[5];
	int i,len,zero=0,one=0,two=0;
	len=sizeof(arr)/sizeof(arr[0]);
	for(i=0;i<len;i++){
		if(arr[i]==0){
			zero++;
		}else if(arr[i]==1){
			one++;
		}else{
			two++;
		}
	}
	cout<<"zero-->"<<zero<<"one-->"<<one<<"two-->"<<two<<"\n";
	for(i=0;i<len;i++){
		if(zero>0){
			arr1[i]=0;
			zero--;
		}else if (one>0){
			arr1[i]=1;
			one--;
		}else{
			arr1[i]=2;
			two--;
		}
	}
	for(i=0;i<len;i++){
		cout<<arr1[i]<<" ";
	}

}

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++
// this is websit code
// +++++++++++++++++++++++++++++++++++++++++++++++++++++

// C++ program to sort an array 
// with 0, 1 and 2 in a single pass 
#include <bits/stdc++.h> 
using namespace std; 
  
// Function to sort the input array, 
// the array is assumed 
// to have values in {0, 1, 2} 
void sort012(int a[], int arr_size) 
{ 
    int lo = 0; 
    int hi = arr_size - 1; 
    int mid = 0; 
  
    // Iterate till all the elements 
    // are sorted 
    while (mid <= hi) { 
        switch (a[mid]) { 
  
        // If the element is 0 
        case 0: 
            swap(a[lo++], a[mid++]); 
            break; 
  
        // If the element is 1 . 
        case 1: 
            mid++; 
            break; 
  
        // If the element is 2 
        case 2: 
            swap(a[mid], a[hi--]); 
            break; 
        } 
    } 
} 
  
// Function to print array arr[] 
void printArray(int arr[], int arr_size) 
{ 
    // Iterate and print every element 
    for (int i = 0; i < arr_size; i++) 
        cout << arr[i] << " "; 
} 
  
// Driver Code 
int main() 
{ 
    int arr[] = { 0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1 }; 
    int n = sizeof(arr) / sizeof(arr[0]); 
  
    sort012(arr, n); 
  
    cout << "array after segregation "; 
  
    printArray(arr, n); 
  
    return 0; 
} 
  
// This code is contributed by Shivi_Aggarwal 







