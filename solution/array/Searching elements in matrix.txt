			Search in a row wise and column wise sorted matrix///Search a 2D Matrix
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:

Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.
 

Example 1:
Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true
Example 2:
Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13
Output: false

Example:3
INPUT-->
{{10,20,30,40},
           {11,21,31,41},
           {25,29,39,50},
           {50,60,70,80}}
target-->25
output-->true
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
leet code-->https://leetcode.com/problems/search-a-2d-matrix/
GFG-->https://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/
youtube-->https://www.youtube.com/watch?v=ZYpYur0znng
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

int main(){
    int matrix[][4] = {{1, 2, 3, 4},
           {5, 6, 7, 8},
           {9, 10, 11, 12},
           {13, 14, 15,16}};
    int num=20,flag=0;
    for(int i=0;i<4;i++){
        for(int j=0;j<4;j++){
               if(num==matrix[i][j]){
                    cout<<"yes";
                    flag=1;
               }
        }
    }
    if(flag!=1)     cout<<"NO";
 }   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
timecomplexity is less then previous code.....
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#include<bits/stdc++.h>
using namespace std;

int main(){
    int matrix[4][4] = {{1,3,5,7},
           {10,11,16,20},
           {23,30,34,60}
           };
    int i=0,j=3,num=3,flag=0;
    while(i<3 && j>=0){
        if(matrix[i][j]==num){
            cout<<"found";
            flag=1;
        }   
        if(matrix[i][j]>num)  j--;
        else   i++;
    }
    if(flag==0)     cout<<"not found";
    
    
 }   
  