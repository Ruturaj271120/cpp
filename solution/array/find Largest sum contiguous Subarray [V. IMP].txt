                                                               |Kadane's Algorithm|
			--------------------------------------
Link--->https://practice.geeksforgeeks.org/problems/kadanes-algorithm-1587115620/1	

Example 1:
---------------
Input:
N = 5
arr[] = {1,2,3,-2,5}
Output:
9
Explanation:
Max subarray sum is 9
of elements (1, 2, 3, -2, 5) which 
is a contiguous subarray.
****************************************
Example 2:
-------------------
Input:
N = 4
arr[] = {-1,-2,-3,-4}
Output:
-1
Explanation:
Max subarray sum is -1 
of element (-1)

*******************************************

----------------------------------------------
O(n)-->solution 
---------------------------------------------
#include<iostream>
using namespace std;
int main(){
	int arr[16]={4,-3,-2,2,3,1,-2,-3,4,2,-6,-3,-1,3,1,2};
    int max,max_end=0,len,i,start=0,end=0,s=0;
    max=arr[0];
    len=sizeof(arr)/sizeof(arr[0]);
    for (i=0;i<len;i++){
        max_end=max_end+arr[i];
        if (max<max_end){
            max=max_end;
            start=s;
            end=i;
        }
        if (max_end<0){
            max_end=0;
            s=i+1;
        }
    }
    cout<<"max sum-->"<<max;

    cout<<"\nstart-->"<<start<<"\nend-->"<<end;
    
}




---------------------------------------------
O(n^2)-->solution 
---------------------------------------------
for(i=0;i<len;i++){
        max_end=0;
        for (j=i;j<len;j++){
            max_end=max_end+arr[j];
            if(max<max_end){
                max=max_end;
            }
        }
    }
    cout<<max;