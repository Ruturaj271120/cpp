						Longest consecutive subsequence
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Example 1:

Input:
N = 7
a[] = {2,6,1,9,4,5,3}
Output:
6
Explanation:
The consecutive numbers here
are 1, 2, 3, 4, 5, 6. These 6 
numbers form the longest consecutive
subsquence.
Example 2:

Input:
N = 7
a[] = {1,9,3,10,4,20,2}
Output:
4
Explanation:
1, 2, 3, 4 is the longest
consecutive subsequence.

Example 1

Input: A[] = [10, 4, 20, 1, 2, 8, 9, 3, 19]
Output: 4 
Explanation: The longest consecutive sequence of integers in the array is 1,2,3 and 4
Example 2

Input: A[] = [0, -2, 3, -1, 2, 1]
Output: 6
Explanation: The longest consecutive sequence of integers in the array is -2,-1,0,1,2, and 3.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(N).
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
youtube-->https://www.youtube.com/watch?v=qgizvmgeyUM&t=290s
link-->https://practice.geeksforgeeks.org/problems/longest-consecutive-subsequence2449/1
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					this code is done by using set
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
this code accept all negative and positive numbers 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int consecutive(int arr[],int len){
    set<int> _set;
    for(int i=0;i<len;i++){
        _set.insert(arr[i]);
    }
    int ans=INT_MIN;
    for(int i=0;i<len;i++){
        if(_set.find(arr[i]-1)==_set.end()){
            int j=arr[i]+1;
            while(_set.find(j) != _set.end())
                j++;
            ans=max(ans,j-arr[i]);
        }
    }
    return ans;
}
int main(){
    int arr[]={0, -2, 3, -1, 2, 1};
    int len=sizeof(arr)/sizeof(arr[0]);
    cout<<consecutive(arr,len);
 }   

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						this code is done by hashing 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
this code doesnot accepts less then 0 numbers .             In this code just we are increasing the range of  the index...so positive numbers works
why?
because in hash table negative index are not managed so this input don't give proper output 
Input: A[] = [0, -2, 3, -1, 2, 1]
Output: 6
Explanation: The longest consecutive sequence of integers in the array is -2,-1,0,1,2, and 3.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include<bits/stdc++.h>
using namespace std;
int consecutive(int arr[],int len){
    unordered_map<int,int> m;
    int count=1;
    int current,max1=0;
    for (int i=0;i<len;i++){
        m[arr[i]]=arr[i];
    }
    for(int i=0;i<len;i++){
        if(m[arr[i]-1]==0){
            count=1;
            // cout<<arr[i]<<" ";
            current=arr[i];
            // cout<<current;
            while(current>0){
                // cout<<m[arr[current]];
                // cout<<"1";
                current=m[m[current]+1];
                // cout<<current;
                count++;
            }
            max1=max(count,max1);
        }
    }
    return max1-1;
}
int main(){
    int arr[]={10, 4, 20, 1, 2, 8, 9, 3, 19};
    int len=sizeof(arr)/sizeof(arr[0]);
    cout<<consecutive(arr,len);
    // cout<<"ddfsdf";
 }   