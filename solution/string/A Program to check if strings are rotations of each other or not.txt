					A Program to check if strings are rotations of each other or not
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Difficulty Level : Medium
Last Updated : 06 Nov, 2020
Given a string s1 and a string s2, write a snippet to say whether s2 is a rotation of s1?
(eg given s1 = ABCD and s2 = CDAB, return true, given s1 = ABCD, and s2 = ACBD , return false)


Algorithm: areRotations(str1, str2)

    1. Create a temp string and store concatenation of str1 to
       str1 in temp.
                          temp = str1.str1
    2. If str2 is a substring of temp then str1 and str2 are 
       rotations of each other.

    Example:                 
                     str1 = "ABACD"
                     str2 = "CDABA"

     temp = str1.str1 = "ABACDABACD"
     Since str2 is a substring of temp, str1 and str2 are 
     rotations of each other.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

int main(){
    string s="ABCD";
    string s1="CDAB";
    string temp=s+s1;
    if(s.length()!=s1.length()){
        cout<<"it is not possible";
    }
    else{
        // here the string::m=npos is the larger string value
        if(temp.find(s1)!=string::npos)   cout<<"string are rotation
         of each other";
    }
 }