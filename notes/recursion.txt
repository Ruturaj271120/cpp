
							Recursion
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1)Display an Array
2)Display Array in Reverse
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include<bits/stdc++.h>
using namespace std;
void Recursion(int n,int arr[]){
  if(n==5){
    return;
  }
  cout<<arr[n];
  Recursion(n+1,arr); 
  cout<<arr[n];
}

int main(){
    int n=0;
    int arr[]={1,2,3,4,5};
    Recursion(n,arr);
}  


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Find Maximum of an Array using Recursion

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int Recursion(int n,int arr[]){
  if(n==4){
    return arr[n];
  }
  
  int max=Recursion(n+1,arr);
  if(max>arr[n])  return max;
  else      return arr[n];

}

int main(){
    int n=0;
    int arr[]={1,2,3,4,5};
    cout<<Recursion(n,arr);
}  

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
First Index of occurrence 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#include<bits/stdc++.h>
using namespace std;
int Recursion(int n,int arr[],int num){
  if(n==5){
    return -1;
  } 
  int min=Recursion(n+1,arr,num);
  if(num==arr[n])   return n;
  else      return min;
}

int main(){
    int n=0;
    int num=8;
    int arr[]={1,0,3,8,8};
    cout<<Recursion(n,arr,num);
}  


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
last Index of occurrence 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int Recursion(int n,int arr[],int num){
  if(n==5){
    return -1;
  } 
  int min=Recursion(n+1,arr,num);
  if(min==-1){
    if(num==arr[n]){
        return n;
    }
    else{
        return -1;
    }
  }
  else{
    return min;
  }

}

int main(){
    int n=0;
    int num=8;
    int arr[]={1,0,3,8,8};
    cout<<Recursion(n,arr,num);
}  

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Recursive program to find all Indices of a Number
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <bits/stdc++.h>
using namespace std;
int allIndex(int arr[],int n,int num,int output[]){
    if(n==7){
        return 0;
    }
    int size=allIndex(arr,n+1,num,output);
        if(arr[n]==num){
            output[size]=n;
            return size+1;
        }
        else    return size;
}

void Index(int arr[],int n,int num,int len){
    
    int output[len];
    int size=allIndex(arr,n,num,output);
    for(int i=0;i<size;i++) {
       cout<<output[i]<<"\n";

    }
}

int main(){
    int arr[]={2,2,3,2,4,2,2};
    int n=0;
    int num=2;
    int len=sizeof(arr)/sizeof(arr[0]);
    Index(arr,n,num,len);
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Get Subsequence of the string
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
void fun(string t,int i,int n,string s){
    if(i==n){
        cout<<t<<"\n";
    }
    else{
        // cout<<"t2-->"<<t<<"\n";
        // cout<<"pre-->"<<i<<"\n";
        fun(t,i+1,n,s);
        // cout<<"t3-->"<<t<<"\n";
        t=t+s[i];
        // cout<<"s[i]-->"<<s[i]<<"\n";
        // cout<<"t-->"<<t<<"\n";
        // cout<<"in-->"<<i<<"\n";
        // cout<<"s[i]-->"<<s[i];
        fun(t,i+1,n,s);
        // cout<<"t1-->"<<t<<"\n";
        // cout<<"post-->"<<i<<"\n";
        // cout<<"t1-->"<<t<<"\n";
    }
}
int main(){
    string s="abc";
    fun("",0,s.length(),s);
}
